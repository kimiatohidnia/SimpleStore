// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleStore.Data;

#nullable disable

namespace SimpleStore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250522111820_AdminPart")]
    partial class AdminPart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimpleStore.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SimpleStore.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SimpleStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 5, 22, 14, 48, 19, 734, DateTimeKind.Local).AddTicks(3595),
                            Description = "High-performance laptop with 16GB RAM, 512GB SSD, and a powerful processor for all your computing needs.",
                            ImageUrl = "/images/products/laptop-x1.jpg",
                            IsActive = true,
                            Name = "Laptop Pro X1",
                            Price = 1299.99m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 2,
                            Category = "Phones",
                            CreatedAt = new DateTime(2025, 5, 22, 14, 48, 19, 734, DateTimeKind.Local).AddTicks(3598),
                            Description = "Latest smartphone with 6.5-inch AMOLED display, 128GB storage, and an impressive camera system.",
                            ImageUrl = "/images/products/galaxy-s.jpg",
                            IsActive = true,
                            Name = "Smartphone Galaxy S",
                            Price = 899.99m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 3,
                            Category = "Audio",
                            CreatedAt = new DateTime(2025, 5, 22, 14, 48, 19, 734, DateTimeKind.Local).AddTicks(3601),
                            Description = "Premium wireless headphones with noise cancellation and 30-hour battery life.",
                            ImageUrl = "/images/products/headphones.jpg",
                            IsActive = true,
                            Name = "Wireless Headphones",
                            Price = 249.99m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 4,
                            Category = "Wearables",
                            CreatedAt = new DateTime(2025, 5, 22, 14, 48, 19, 734, DateTimeKind.Local).AddTicks(3603),
                            Description = "Track your fitness, receive notifications, and more with this sleek smart watch.",
                            ImageUrl = "/images/products/smartwatch.jpg",
                            IsActive = true,
                            Name = "Smart Watch Series 5",
                            Price = 349.99m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 5,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2025, 5, 22, 14, 48, 19, 734, DateTimeKind.Local).AddTicks(3605),
                            Description = "12-inch tablet with retina display, perfect for work and entertainment on the go.",
                            ImageUrl = "/images/products/tablet-pro.jpg",
                            IsActive = true,
                            Name = "Tablet Pro 12",
                            Price = 799.99m,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("SimpleStore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SimpleStore.Models.OrderItem", b =>
                {
                    b.HasOne("SimpleStore.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SimpleStore.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
