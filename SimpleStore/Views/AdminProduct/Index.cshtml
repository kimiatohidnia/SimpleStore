@* Views/AdminProduct/Index.cshtml *@
@model IEnumerable<SimpleStore.Models.Product>

@{
    ViewData["Title"] = "Manage Products";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>@ViewData["Title"]</h2>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Add New Product
                </a>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["InfoMessage"] != null)
            {
                <div class="alert alert-info alert-dismissible fade show" role="alert">
                    @TempData["InfoMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                                    <th>@Html.DisplayNameFor(model => model.Category)</th>
                                    <th>@Html.DisplayNameFor(model => model.Price)</th>
                                    <th>@Html.DisplayNameFor(model => model.Stock)</th>
                                    <th>Status</th>
                                    <th>@Html.DisplayNameFor(model => model.CreatedAt)</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                @if (!string.IsNullOrEmpty(item.ImageUrl))
                                                {
                                                    <img src="@item.ImageUrl" alt="@item.Name" class="me-2" style="width: 40px; height: 40px; object-fit: cover; border-radius: 4px;">
                                                }
                                                <div>
                                                    <strong>@Html.DisplayFor(modelItem => item.Name)</strong>
                                                    <br>
                                                    <small class="text-muted">@(item.Description.Length > 50 ? item.Description.Substring(0, 50) + "..." : item.Description)</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.Category)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                                        <td>
                                            @if (item.Stock.HasValue)
                                            {
                                                <span class="badge @(item.Stock < 5 ? "bg-danger" : item.Stock < 10 ? "bg-warning" : "bg-success")">
                                                    @item.Stock
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">N/A</span>
                                            }
                                        </td>
                                        <td>
                                            @if (item.IsActive)
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">Inactive</span>
                                            }
                                        </td>
                                        <td>@item.CreatedAt.ToString("MM/dd/yyyy")</td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Details</a>
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Edit</a>
                                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>