@model SimpleStore.Models.ProfileViewModel
@{
    ViewData["Title"] = "Profile";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <!-- User Profile Section -->
        <div class="card shadow mb-4">
            <div class="card-header bg-primary text-white">
                <h2 class="mb-0">User Profile</h2>
            </div>
            <div class="card-body">
                @if (TempData["StatusMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["StatusMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                <form asp-action="Profile" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="mb-3">
                        <label asp-for="Username" class="form-label"></label>
                        <input asp-for="Username" class="form-control" />
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Email" class="form-label"></label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="d-flex justify-content-between">
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                        <a asp-action="ChangePassword" class="btn btn-outline-primary">Change Password</a>
                    </div>
                </form>
            </div>
        </div>

        <!-- Order History Section -->
        <div class="card shadow">
            <div class="card-header bg-secondary text-white d-flex justify-content-between align-items-center">
                <h3 class="mb-0">Recent Orders</h3>
                @if (Model.RecentOrders.Any())
                {
                    <a asp-controller="Order" asp-action="History" class="btn btn-light btn-sm">View All Orders</a>
                }
            </div>
            <div class="card-body">
                @if (!Model.RecentOrders.Any())
                {
                    <div class="text-center py-4">
                        <div class="mb-3">
                            <i class="fas fa-shopping-cart fa-3x text-muted"></i>
                        </div>
                        <h5 class="text-muted">You haven't had any orders before.</h5>
                        <p class="text-muted">Start shopping to see your order history here!</p>
                        <a href="@Url.Action("Index", "Product")" class="btn btn-primary">Start Shopping</a>
                    </div>
                }
                else
                {
                    @foreach (var order in Model.RecentOrders)
                    {
                        <div class="card mb-3 border-left-primary">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col-md-3">
                                        <strong>Order #@order.Id</strong>
                                        <br>
                                        <small class="text-muted">@order.CreatedAt.ToString("MMM dd, yyyy")</small>
                                    </div>
                                    <div class="col-md-3">
                                        <span class="badge badge-@GetStatusBadgeClass(order.Status)">
                                            @order.Status
                                        </span>
                                        @if (order.CancellationRequested)
                                        {
                                            <br>
                                            <small class="text-warning">Cancellation Requested</small>
                                        }
                                        @if (order.ReturnRequested)
                                        {
                                            <br>
                                            <small class="text-info">Return Requested</small>
                                        }
                                    </div>
                                    <div class="col-md-3">
                                        <strong>@order.TotalAmount.ToString("C")</strong>
                                        <br>
                                        <small class="text-muted">@order.ItemCount item(s)</small>
                                    </div>
                                    <div class="col-md-3 text-end">
                                        <a href="@Url.Action("Details", "Order", new { id = order.Id })"
                                           class="btn btn-outline-primary btn-sm">
                                            View Details
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
            }
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Processing" => "warning",
            "Shipped" => "info", 
            "Delivered" => "success",
            _ => "secondary"
        };
    }
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}