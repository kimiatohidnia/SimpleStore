@model OrderHistoryViewModel
@{
    ViewData["Title"] = "Order History";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>Order History</h2>
            </div>

            @if (!Model.Orders.Any())
            {
                <div class="alert alert-info">
                    <h5>No Orders Found</h5>
                    <p>You haven't placed any orders yet.</p>
                    <a href="@Url.Action("Index", "Product")" class="btn btn-primary">Start Shopping</a>
                </div>
            }
            else
            {
                <div class="row">
                    @foreach (var order in Model.Orders)
                    {
                        <div class="col-12 mb-3">
                            <div class="card">
                                <div class="card-body">
                                    <div class="row align-items-center">
                                        <div class="col-md-2">
                                            <strong>Order #@order.Id</strong>
                                            <br>
                                            <small class="text-muted">@order.CreatedAt.ToString("MMM dd, yyyy")</small>
                                        </div>
                                        <div class="col-md-2">
                                            <span class="badge badge-@GetStatusBadgeClass(order.Status) badge-pill">
                                                @order.Status
                                            </span>
                                            @if (order.CancellationRequested)
                                            {
                                                <br>

                                                <small class="text-warning">Cancellation Requested</small>
                                            }
                                            @if (order.ReturnRequested)
                                            {
                                                <br>

                                                <small class="text-info">Return Requested</small>
                                            }
                                        </div>
                                        <div class="col-md-2">
                                            <strong>@order.TotalAmount.ToString("C")</strong>
                                            <br>
                                            <small class="text-muted">@order.ItemCount item(s)</small>
                                        </div>
                                        <div class="col-md-6 text-right">
                                            <a href="@Url.Action("Details", new { id = order.Id })"
                                               class="btn btn-outline-primary btn-sm">
                                                View Details
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Processing" => "warning",
            "Shipped" => "info",
            "Delivered" => "success",
            _ => "secondary"
        };
    }
}